{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,aAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAqDtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAAeI,EAAQ,CAAEN,WAAUC,UAClCM,EAAO,CAAEP,WAAUC,S,GACvBA,E,IAxDPT,EAAKC,KAAKgB,iBAAiB,UAAU,SAAAC,GAQnC,GAPAA,EAAIC,iBAQDnB,EAAKI,WAAWgB,OAChBpB,EAAKK,UAAUe,OACfpB,EAAKM,YAAYc,MAHpB,CAQA,IAAMC,EAAQC,OAAOtB,EAAKI,WAAWgB,OAC/BG,EAAOD,OAAOtB,EAAKK,UAAUe,OAC7BI,EAASF,OAAOtB,EAAKM,YAAYc,OAEvC,GAAIE,OAAOG,MAAMJ,IAAUC,OAAOG,MAAMF,IAASD,OAAOG,MAAMD,GAC5DE,EAAAC,OAAOC,QAAQ,sBAAuB,GAAI,WAI5C,GAAIP,EAAQ,EACVK,EAAAC,OAAOC,QAAQ,iCAAkC,GAAI,WAGvD,GAAIJ,GAAU,EACZE,EAAAC,OAAOC,QAAQ,oCAAqC,GAAI,WAI1D,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,IAC1BtB,EAAcsB,EAAI,EAAGR,EAAQE,EAAOM,GACjCC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBX,EAAAkC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAC9D0B,cAAY,G,IAGjBC,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBX,EAAAkC,OAAOK,QAAQ,sBAAqCH,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAC7D0B,cAAc,G,SA9BpBT,EAAAC,OAAOC,QAAQ,4BAA6B,GAAI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  // inputs: [],\n};\n\nrefs.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  // Є сенс таким чином робити змінні?\n  // for (const el of refs.form) {\n  //   if (el.nodeName === 'INPUT') refs.inputs[el.name] = el.value;\n  // }\n\n  if (\n    !refs.inputDelay.value ||\n    !refs.inputStep.value ||\n    !refs.inputAmount.value\n  ) {\n    Report.warning('All fields must be filled', '', 'OK');\n    return;\n  }\n  const delay = Number(refs.inputDelay.value);\n  const step = Number(refs.inputStep.value);\n  const amount = Number(refs.inputAmount.value);\n\n  if (Number.isNaN(delay) || Number.isNaN(step) || Number.isNaN(amount)) {\n    Report.warning('Must be all numbers', '', 'OK');\n    return;\n  }\n\n  if (delay < 0) {\n    Report.warning('First delay cannot be negative', '', 'OK');\n    return;\n  }\n  if (amount <= 0) {\n    Report.warning('The Amount must be greater than 0', '', 'OK');\n    return;\n  }\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n        });\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) resolve({ position, delay });\n      else reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","value","delay1","Number","step","amount","isNaN","$fivgP","Report","warning","i","then","param","Notify","success","concat","clickToClose","catch","failure"],"version":3,"file":"03-promises.1d9ae4b6.js.map"}